sp {cube-stack*propose*begin-stack
   "If we have two blocks, one less than the other, propose stacking the smaller on the larger."
   (state <s> ^name cube-stack
              ^block <b1>
              ^block {<> <b1> <b2>})
   (<b1> ^id <id1>
        -^under
        -^on)
   (<b2> ^id {< <id1> <id2>}
        -^under
        -^on)
   (<s> -^stack-bot
        -^stack-top)
-->
   (<s> ^operator <op> + =)
   (<op> ^name begin-stack
         ^top <id2>
         ^bot <id1>)
}

sp {apply*begin-stack
   "Store the proposed stacking order in wm"
   (state <s> ^operator <op>)
   (<op> ^name begin-stack
         ^top <id-top>
         ^bot <id-bot>)
   
-->
   (<s> ^stack-bot <id-bot>
        ^stack-top <id-top>)
}

sp {cube-stack*propose*turn-to-top
   "Given a proposed top cube to stack, turn towards it if needed."
   (state <s> ^name cube-stack
              ^stack-top <top-id>
              ^block <b>
              ^io.input-link.carrying_block 0)
   (<b> ^id <top-id>
        ^heading {> 10 <hd>})
-->
   (<s> ^operator <op> + =)
   (<op> ^name turn-in-place
         ^actions true
         ^angle <hd>
         ^speed 45)
}

sp {cube-stack*propose*pick-up-top
   "Given a proposed top cube ot stack, go and pick it up if it is visible."
   (state <s> ^name cube-stack
              ^stack-top <top-id>
              ^io.input-link.object <obj>)
   (<obj> ^type cube
          ^cube_id <top-id>)
-->
   (<s> ^operator <op> + =)
   (<op> ^name pick-up-object
         ^actions.pick-up-object <a>)
   (<a> ^object_id <top-id>)
}

sp {cube-stack*propose*turn-to-bot
   "If Cozmo is carrying the top block and cannot find the bottom, turn until found."
   (state <s> ^name cube-stack
              ^stack-top <tid>
              ^stack-bot <bid>
              ^io.input-link <in>
   (<in> ^carrying_object_id <tid>
        -^object.cube_id <bid>)
-->
   (<s> ^operator <op> + =)
   (<op> ^name turn-in-place
         ^actions true
         ^angle 30
         ^speed 45)
}

sp {cube-stack*propose*place-on-bottom
   "If Cozmo is carrying the top block, place it on the bottom one"
   (state <s> ^name cube-stack
              ^stack-top <tid>
              ^stack-bot <bid>
              ^io.input-link <in>)
   (<in> ^object <b>
         ^carrying_block > 0
         ^carrying_object_id <tid>)
   (<b> ^type cube
        ^cube_id <bid>
        ^object_id <oid>)
-->
   (<s> ^operator <op> + =)
   (<op> ^name place-on-object
         ^actions.place-on-object <a>)
   (<a> ^target_object_id <oid>)
}




##############################
# STACK PRIORITY COMPARISONS #
##############################

sp {cube-stack*compare-by-top*stack
   "Ensure we stack the lowest cube id before others"
   (state <s> ^name cube-stack
              ^operator <op1> +
                        <op2> +)
   (<op1> ^name begin-stack
          ^top <top1>
          ^bot <bot1>)
   (<op2> ^name begin-stack
          ^top {< <top1> <top2>}
          ^bot <bot2>)
-->
   (<s> ^operator <op2> > <op1>)
}

sp {cube-stack*compare-by-bot*stack
   "Ensure we stack to the next lowest cube"
   (state <s> ^name cube-stack
              ^operator <op1> +
                        <op2> +)
   (<op1> ^name begin-stack
          ^top <top1>
          ^bot <bot1>)
   (<op2> ^name begin-stack
          ^top <top1>
          ^bot {< <bot1> <bot2>})
-->
   (<s> ^operator <op2> > <op1>)
}

sp {cube-stack*compare-need-to-turn*stack
   (state <s> ^name cube-stack
              ^operator <op1> +
                        <op2> +)
   (<op1> ^name turn-in-place)
   (<op2> ^name pick-up-object)
-->
   (<s> ^operator <op1> > <op2>)
}
